# main_workflow.yml

name: Push the Docker image to AWS ECR Repos (Multi-Region)
on:
  push:
    branches: []

jobs:
  Build-Dev:
    name: Build and Push to Dev Region (eu-west-1)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/stage'  # Only run for pushes to the 'stage' branch
    steps:
      - name: Include variables
        id: vars
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const variables = fs.readFileSync('variables.yaml', 'utf8');
            console.log(variables);
            const branch = JSON.parse(variables).branches.find(branch => branch.name === 'stage');
            console.log(branch.dev_repository);
            console.log(branch.prod_repository);
            process.env['DEV_REPOSITORY'] = branch.dev_repository;
            process.env['PROD_REPOSITORY'] = branch.prod_repository;

      # Rest of the steps remain the same

  Build-Prod:
    name: Build and Push to Prod Region (us-east-1)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run for pushes to the 'main' branch
    needs: [Build-Dev]  # Wait for Dev build to complete before Prod
    steps:
      - name: Include variables
        id: vars
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const variables = fs.readFileSync('variables.yaml', 'utf8');
            console.log(variables);
            const branch = JSON.parse(variables).branches.find(branch => branch.name === 'main');
            console.log(branch.dev_repository);
            console.log(branch.prod_repository);
            process.env['DEV_REPOSITORY'] = branch.dev_repository;
            process.env['PROD_REPOSITORY'] = branch.prod_repository;

      # Rest of the steps remain the same
