name: Push the Docker image to AWS ECR Repos (Multi-Region)
on:
  push:
    branches:
      - stage

jobs:
  Fetch-Variables:
    name: Fetch Variables
    runs-on: ubuntu-latest
    steps:
      - name: Fetch variables
        uses: ./.github/workflows/fetch_variables.yaml
        id: vars

  Build-Dev:
    name: Build and Push to Dev Region (eu-west-1)
    runs-on: ubuntu-latest
    needs: [Fetch-Variables]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Continue with your Dev build steps using the fetched variables
      - name: Configure AWS credentials (Dev Region)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR (Dev Region)
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

      - name: Build, tag, and push image to Amazon ECR (Dev Region)
        id: build-image-dev
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-dev.outputs.registry }}
          ECR_REPOSITORY: ${{ env.DEV_REPOSITORY }}  # Dynamically populated Dev Region Repository
          IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}-${{ env.BRANCH_NAME }} # Append branch name to the tag
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  
